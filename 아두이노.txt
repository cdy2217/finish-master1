
#include <SPI.h>
#include <Ethernet.h>

byte mac[] = { 0x90, 0xA2, 0xDA, 0x0D, 0x24, 0x5E };   //physical mac address
byte ip[] = { 192, 168, 0, 15 };                      // ip in lan (that's what you need to use in your browser. ("192.168.1.178")
byte gateway[] = { 192, 168, 1, 1 };                   // internet access via router
byte subnet[] = { 255, 255, 255, 0 };                  //subnet mask
EthernetServer server(80);                             //server port     
String readString;

//¿ÞÂÊ ¸ðÅÍ ÇÉ ¼³Á¤
int ENA = 6;
int IN1 = 7;
int IN2 = 8;

//¿À¸¥ÂÊ ¸ðÅÍ ÇÉ ¼³Á¤
int ENB = 11;
int IN3 = 3;
int IN4 = 4;


void setup() {
 // Open serial communications and wait for port to open:
  Serial.begin(9600);
   while (!Serial) {
    ; // wait for serial port to connect. Needed for Leonardo only
  }
  pinMode(ENA, OUTPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(ENB, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  
  Ethernet.begin(mac, ip, gateway, subnet);
  server.begin();
  Serial.print("server is at ");
  Serial.println(Ethernet.localIP());
}

  
void loop() {
  // Create a client connection
  EthernetClient client = server.available();
  if (client) {
    while (client.connected()) {   
      if (client.available()) {
        char c = client.read();
     
        //read char by char HTTP request
        if (readString.length() < 100) {
          //store characters to string
          readString += c;
          //Serial.print(c);
         }

         //if HTTP request has ended
         if (c == '\n') {          
           Serial.println(readString); //print to serial monitor for debuging
     
           client.println("HTTP/1.1 200 OK"); //send new page
           client.println("Content-Type: text/html");
           client.println();     
           client.println("<HTML>");
           client.println("<HEAD>");
           client.println("<meta name='apple-mobile-web-app-capable' content='yes' />");
           client.println("<meta name='apple-mobile-web-app-status-bar-style' content='black-translucent' />");
           client.println("<link rel='stylesheet' type='text/css' href='https://randomnerdtutorials.com/ethernetcss.css' />");
           client.println("<TITLE> Arduino web sever </TITLE>");
           client.println("</HEAD>");
           client.println("<BODY>");
           client.println("<H1> Arduino web sever</H1>");
           client.println("<hr />");
           client.println("<br />");  
           client.println("<H2>Arduino with Ethernet Shield</H2>");    
           client.println("<br />"); 
           client.println("<a href=\"/?button1\"\">GO</a>");
           client.println("<a href=\"/?button2\"\">BACK</a><br />");
           client.println("<br />");
           client.println("<a href=\"/?button3\"\">RIGHTt</a><br />"); 
           client.println("<br />");
           client.println("<a href=\"/?button4\"\">LEFT</a><br />");
           client.println("<br />");
           client.println("<a href=\"/?button5\"\">STOP</a><br />");           
           client.println("<br />"); 
           client.println("</BODY>");
           client.println("</HTML>");
     
           delay(1);
           //stopping client
           client.stop();
           if (readString.indexOf("?button1") >0){
            //move forward
             digitalWrite(IN1, HIGH); 
             digitalWrite(IN2, LOW); 
             digitalWrite(IN3, HIGH); 
             digitalWrite(IN4, LOW); 
             }
             
              if (readString.indexOf("?button2") >0){
            //move backward
             digitalWrite(IN1, LOW); 
             digitalWrite(IN2, HIGH); 
             digitalWrite(IN3, LOW); 
             digitalWrite(IN4, HIGH); 
             }
              if (readString.indexOf("?button3") >0){
            //move left
             digitalWrite(IN1, HIGH); 
             digitalWrite(IN2, LOW); 
             digitalWrite(IN3, LOW); 
             digitalWrite(IN4, HIGH); 
             }
             
              if (readString.indexOf("?button4") >0){
            //move right
             digitalWrite(IN1, LOW); 
             digitalWrite(IN2, HIGH); 
             digitalWrite(IN3, HIGH); 
             digitalWrite(IN4, LOW); 
             }
             
             if (readString.indexOf("?button5") >0){
            //stop
             digitalWrite(IN1, LOW); 
             digitalWrite(IN2, LOW); 
             digitalWrite(IN3, LOW); 
             digitalWrite(IN4, LOW); 
             }
             
                readString="";
           }

}
    }
  }
}